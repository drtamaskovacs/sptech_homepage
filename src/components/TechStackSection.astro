---
interface TechnologyItem {
  name: string;
  icon: string;
}

interface TechCategory {
  name: string;
  items: TechnologyItem[];
}

interface TechFolder {
  name: string;
  categories: TechCategory[];
}

const techFolders: TechFolder[] = [
  {
    name: "Data Platform",
    categories: [
      {
        name: "Data Ingestion",
        items: [
          { name: "Airbyte", icon: "/logos/Data_Related/101_Airbyte.svg" },
          { name: "Pentaho PDI", icon: "/logos/Data_Related/102_Pentaho_DataIntegration.svg" },
          { name: "Apache Kafka", icon: "/logos/Data_Related/103_Apache_Kafka.svg" },
          { name: "Debezium", icon: "/logos/Data_Related/104_Debezium.svg" },
          { name: "Logstash", icon: "/logos/DevOps_Related/236_Elastic_Logstash.svg" },
          { name: "Fluent Bit", icon: "/logos/DevOps_Related/235_Fluentbit.svg" },
        ]
      },
      {
        name: "Data Transformation",
        items: [
          { name: "DBT", icon: "/logos/Data_Related/105_DBT.svg" },
          { name: "Pentaho PDI", icon: "/logos/Data_Related/102_Pentaho_DataIntegration.svg" },
          { name: "MS Data Factory", icon: "/logos/Data_Related/107_MS_DataFactory.svg" },
          { name: "Informatica PowerCenter", icon: "/logos/Data_Related/108_Informatica_PowerCenter.svg" },
        ]
      },
      {
        name: "Databases & Storage",
        items: [
          { name: "PostgreSQL", icon: "/logos/Data_Related/109_PostgreSQL.svg" },
          { name: "Citus", icon: "/logos/Data_Related/110_Citus.svg" },
          { name: "MS SQL Server", icon: "/logos/Data_Related/111_MS_SQLServer.svg" },
          { name: "Oracle DB", icon: "/logos/Data_Related/112_OracleDB.svg" },
          { name: "IBM DB2", icon: "/logos/Data_Related/113_IBM_DB2.svg" },
          { name: "ClickHouse", icon: "/logos/Data_Related/114_ClickHouse.svg" },
          { name: "MinIO", icon: "/logos/Data_Related/115_MinIO.svg" },
        ]
      },
      {
        name: "Analytics & Visualization",
        items: [
          { name: "Pentaho Report Designer", icon: "/logos/Data_Related/116_Perntaho_ReportDesigner.svg" },
          { name: "Apache Superset", icon: "/logos/Data_Related/117_Apache_Superset.svg" },
          { name: "MS Power BI", icon: "/logos/Data_Related/118_MS_PowerBI.svg" },
          { name: "Grafana", icon: "/logos/DevOps_Related/250_Grafana.svg" },
          { name: "Kibana", icon: "/logos/DevOps_Related/237_Elastic_Kibana.svg" },
        ]
      },
      {
        name: "Data Orchestration",
        items: [
          { name: "Airflow", icon: "/logos/Data_Related/119_Airflow.svg" },
          { name: "Dagster", icon: "/logos/Data_Related/120_Dagster.svg" },
          { name: "MS Data Factory", icon: "/logos/Data_Related/107_MS_DataFactory.svg" },
          { name: "Pentaho PDI", icon: "/logos/Data_Related/102_Pentaho_DataIntegration.svg" },
        ]
      },
      {
        name: "Data Quality & Governance",
        items: [
          { name: "Faker", icon: "/logos/Data_Related/123_Faker.svg" },
          { name: "pgAnonymizer", icon: "/logos/Data_Related/124_pgAnonymizer.svg" },
          { name: "Airbyte", icon: "/logos/Data_Related/101_Airbyte.svg" },
          { name: "OpenMetadata", icon: "/logos/Data_Related/126_OpenMetadata.svg" },
          { name: "Great Expectations", icon: "/logos/Data_Related/127_GreatExpectations.svg" },
        ]
      },
    ]
  },
  {
    name: "DevOps",
    categories: [
      {
        name: "Infrastructure as Code",
        items: [
          { name: "Terraform", icon: "/logos/DevOps_Related/201_Terraform.svg" },
          { name: "Ansible", icon: "/logos/DevOps_Related/202_Ansible.svg" },
          { name: "Puppet", icon: "/logos/DevOps_Related/205_Puppet.svg" },
          { name: "Chef", icon: "/logos/DevOps_Related/207_Chef.svg" },
        ]
      },
      {
        name: "Container & Orchestration",
        items: [
          { name: "Docker", icon: "/logos/DevOps_Related/211_Docker.svg" },
          { name: "Podman", icon: "/logos/DevOps_Related/212_Podman.svg" },
          { name: "Kubernetes", icon: "/logos/DevOps_Related/213_Kubernetes.svg" },
          { name: "Helm", icon: "/logos/DevOps_Related/203_Helm.svg" },
          { name: "Kustomize", icon: "/logos/DevOps_Related/204_Kustomize.svg" },
          { name: "OpenShift", icon: "/logos/DevOps_Related/214_OpenShift.svg" },
        ]
      },
      {
        name: "CI/CD & Automation",
        items: [
          { name: "Jenkins", icon: "/logos/DevOps_Related/220_Jenkins.svg" },
          { name: "GitLab CI", icon: "/logos/DevOps_Related/221_Gitlab_CI.svg" },
          { name: "GitHub Actions", icon: "/logos/DevOps_Related/223_Github_Actions.svg" },
          { name: "Azure DevOps", icon: "/logos/DevOps_Related/222_Azure_Devops.svg" },
          { name: "ArgoCD", icon: "/logos/DevOps_Related/227_ArgoCD.svg" },
        ]
      },
      {
        name: "Monitoring & Observability",
        items: [
          { name: "Prometheus", icon: "/logos/DevOps_Related/249_Prometheus.svg" },
          { name: "Grafana", icon: "/logos/DevOps_Related/250_Grafana.svg" },
          { name: "Elasticsearch", icon: "/logos/DevOps_Related/233_ElasticSearch.svg" },
          { name: "Kibana", icon: "/logos/DevOps_Related/237_Elastic_Kibana.svg" },
          { name: "Zabbix", icon: "/logos/DevOps_Related/251_Zabbix.svg" },
        ]
      },
      {
        name: "Security & Secrets",
        items: [
          { name: "Vault", icon: "/logos/DevOps_Related/208_Vault.svg" },
          { name: "Trivy", icon: "/logos/DevOps_Related/258_Trivy.svg" },
          { name: "SonarQube", icon: "/logos/DevOps_Related/259_Sonarqube.svg" },
          { name: "Checkov", icon: "/logos/DevOps_Related/252_Checkov.svg" },
        ]
      },
      {
        name: "Version Control & Collaboration",
        items: [
          { name: "GitLab", icon: "/logos/DevOps_Related/228_Gitlab.svg" },
          { name: "GitHub", icon: "/logos/DevOps_Related/229_Github.svg" },
          { name: "Bitbucket", icon: "/logos/DevOps_Related/230_Bitbucket.svg" },
        ]
      },
    ]
  },
];

interface Props {
  title?: string;
  subtitle?: string;
}

const { 
  title = "We Build with", 
  subtitle = "Powering our solutions with cutting-edge technologies",
} = Astro.props;

const totalTools = techFolders.reduce((total, folder) => 
  total + folder.categories.reduce((folderTotal, category) => 
    folderTotal + category.items.length, 0), 0);
---

<section class="bg-custom-blue-gradient py-32 relative overflow-hidden">
  <!-- Grid Background Pattern -->
  <div class="absolute inset-0 opacity-20">
    <div class="grid grid-cols-12 gap-4 h-full">
      {Array(12).fill(0).map(() => (
        <div class="border-r border-blue-600/50"></div>
      ))}
    </div>
    <div class="absolute inset-0 grid grid-rows-12 gap-4">
      {Array(12).fill(0).map(() => (
        <div class="border-b border-blue-600/50"></div>
      ))}
    </div>
  </div>
  
  <!-- Radial Gradient Overlay -->
  <div class="absolute inset-0 bg-gradient-radial from-transparent to-slate-900/80"></div>
  
  <!-- Floating Technology Icons -->
  <div class="absolute inset-0 opacity-10">
    <img src="/logos/Data_Related/101_Airbyte.svg" 
         class="absolute w-16 h-16 top-20 left-[15%] animate-float-slow" 
         alt="Airbyte" />
    <img src="/logos/DevOps_Related/211_Docker.svg" 
         class="absolute w-20 h-20 top-32 right-[30%] animate-float" 
         alt="Docker" />
    <img src="/logos/Data_Related/109_PostgreSQL.svg" 
         class="absolute w-18 h-18 top-40 left-[75%] animate-float-slow" 
         alt="PostgreSQL" />
    <img src="/logos/DevOps_Related/213_Kubernetes.svg" 
         class="absolute w-24 h-24 top-[45%] left-[20%] animate-float" 
         alt="Kubernetes" />
    <img src="/logos/Data_Related/105_DBT.svg" 
         class="absolute w-16 h-16 top-[50%] right-[20%] animate-float-slow" 
         alt="DBT" />
    <img src="/logos/DevOps_Related/249_Prometheus.svg" 
         class="absolute w-20 h-20 bottom-40 left-[70%] animate-float" 
         alt="Prometheus" />
    <img src="/logos/Data_Related/120_Dagster.svg" 
         class="absolute w-18 h-18 bottom-50 left-[25%] animate-float-slow" 
         alt="Dagster" />
    <img src="/logos/DevOps_Related/250_Grafana.svg" 
         class="absolute w-22 h-22 bottom-96 left-[30%] animate-float" 
         alt="Grafana" />
  </div>

  <!-- Content -->
  <div class="container mx-auto relative z-10">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="text-5xl font-bold text-blue-400 mb-4 font-square">{title}</h2>
    <p class="text-center text-gray-300 mb-2 max-w-3xl mx-auto">
      {subtitle}
    </p>      
    <p class="text-slate-400 text-sm">
        {totalTools} technologies across {techFolders.length} domains
      </p>
    </div>
    
    <!-- Technology Stack Card -->
    <div class="flex justify-center">
      <div class="w-full max-w-3xl bg-slate-900/60 backdrop-blur-md border border-slate-700 rounded-xl shadow-2xl overflow-hidden">
        <!-- Card Header -->
        <div class="flex items-center justify-between p-6 border-b border-slate-700">
          <div class="flex items-center gap-4">
            <div class="flex gap-2">
              <div class="sm:w-3 sm:h-3 h-2 w-2 bg-slate-500 rounded-full"></div>
              <div class="sm:w-3 sm:h-3 h-2 w-2 bg-slate-500 rounded-full"></div>
              <div class="sm:w-3 sm:h-3 h-2 w-2 bg-slate-500 rounded-full"></div>
            </div>
            <h3 class="text-white text-lg font-semibold">Technology Stack</h3>
          </div>
          <div class="text-slate-400 text-sm sm:block hidden">
            {techFolders.length} domains
          </div>
        </div>
        
        <!-- Card Content -->
        <div class="max-h-[70vh] overflow-y-auto scrollbar-thin scrollbar-track-slate-800 scrollbar-thumb-slate-600">
          <div class="p-6 space-y-6">
            {techFolders.map((folder, folderIndex) => (
              <div class="tech-folder" data-folder-index={folderIndex}>
                <!-- Main Folder Header -->
                <div class="folder-toggle flex items-center justify-between p-4 bg-slate-800/50 rounded-lg border border-slate-700 cursor-pointer hover:bg-slate-800/70 transition-all duration-200">
                  <div class="flex items-center gap-4">
                    <div class="folder-chevron text-slate-400 transition-transform duration-300 ease-out">
                      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="m9 18 6-6-6-6"/>
                      </svg>
                    </div>
                    <div class="flex items-center gap-3">
                      <div class="w-8 h-8 bg-slate-700 rounded-lg flex items-center justify-center">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="text-slate-400">
                          <path d="M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z"/>
                        </svg>
                      </div>
                      <div>
                        <h4 class="text-white text-lg font-semibold">{folder.name}</h4>
                        <p class="text-slate-400 text-sm">
                          {folder.categories.length} categories, {folder.categories.reduce((total, cat) => total + cat.items.length, 0)} tools
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Folder Content -->
                <div class="folder-content overflow-hidden transition-all duration-500 ease-out" style="max-height: 0px;">
                  <div class="folder-inner mt-4 space-y-4 opacity-0 transition-opacity duration-300 ease-out">
                    {folder.categories.map((category, categoryIndex) => (
                      <div class="ml-6 p-4 bg-slate-800/30 rounded-lg border border-slate-700/50 transform transition-all duration-300 ease-out"
                           style={`animation-delay: ${categoryIndex * 50}ms`}>
                        <!-- Category Header -->
                        <div class="flex items-center gap-3 mb-4">
                          <div class="w-6 h-6 bg-slate-700 rounded-md flex items-center justify-center">
                            <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="text-slate-400">
                              <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                              <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                            </svg>
                          </div>
                          <h5 class="text-slate-200 font-semibold">{category.name}</h5>
                          <span class="text-slate-500 text-sm">({category.items.length})</span>
                        </div>
                        
                        <!-- Category Items -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-2">
                          {category.items.map((item, itemIndex) => (
                            <div class="flex items-center gap-3 p-2 rounded-md hover:bg-slate-700/30 transition-all duration-150 transform hover:scale-105 hover:translate-x-1"
                                 style={`animation-delay: ${(categoryIndex * 100) + (itemIndex * 25)}ms`}>
                              <img src={item.icon} alt={item.name} class="w-5 h-5 flex-shrink-0" />
                              <span class="text-slate-300 text-sm">{item.name}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Handle folder toggling
  const folderToggles = document.querySelectorAll('.folder-toggle');
  
  folderToggles.forEach((toggle) => {
    toggle.addEventListener('click', () => {
      const folder = toggle.closest('.tech-folder');
      const content = folder?.querySelector('.folder-content') as HTMLElement;
      const inner = folder?.querySelector('.folder-inner') as HTMLElement;
      const chevron = folder?.querySelector('.folder-chevron') as HTMLElement;
      
      if (!content || !inner || !chevron) return;
      
      const isExpanded = content.style.maxHeight !== '0px';
      
      if (isExpanded) {
        // Collapse
        inner.style.opacity = '0';
        content.style.maxHeight = '0px';
        chevron.style.transform = 'rotate(0deg)';
      } else {
        // Expand
        const scrollHeight = inner.scrollHeight;
        content.style.maxHeight = `${scrollHeight + 32}px`; // Add padding
        chevron.style.transform = 'rotate(90deg)';
        
        // Fade in content after expansion starts
        setTimeout(() => {
          inner.style.opacity = '1';
        }, 100);
      }
    });
  });
});
</script>

<style>
  /* Gradient utilities */
  .bg-gradient-radial {
    background-image: radial-gradient(var(--tw-gradient-stops));
  }
  
  /* Floating animations */
  @keyframes float {
    0%, 100% { 
      transform: translateY(0px) rotate(0deg); 
    }
    50% { 
      transform: translateY(-20px) rotate(2deg); 
    }
  }
  
  @keyframes float-slow {
    0%, 100% { 
      transform: translateY(0px) rotate(0deg); 
    }
    50% { 
      transform: translateY(-15px) rotate(-1deg); 
    }
  }
  
  /* Folder animation keyframes */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes itemSlideIn {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-slow {
    animation: float-slow 8s ease-in-out infinite;
  }
  
  /* Enhanced transition effects */
  .folder-content.expanding .folder-inner > div {
    animation: slideInUp 0.6s ease-out forwards;
  }
  
  .folder-content.expanding .folder-inner .grid > div {
    animation: itemSlideIn 0.4s ease-out forwards;
  }
  
  /* Custom scrollbar */
  .scrollbar-thin::-webkit-scrollbar {
    width: 6px;
  }
  
  .scrollbar-track-slate-800::-webkit-scrollbar-track {
    background: #1e293b;
    border-radius: 3px;
  }
  
  .scrollbar-thumb-slate-600::-webkit-scrollbar-thumb {
    background: #475569;
    border-radius: 3px;
  }
  
  .scrollbar-thumb-slate-600::-webkit-scrollbar-thumb:hover {
    background: #64748b;
  }
  
  /* Firefox scrollbar */
  .scrollbar-thin {
    scrollbar-width: thin;
    scrollbar-color: #475569 #1e293b;
  }
  
  /* Hover effects for better interactivity */
  .tech-folder:hover .folder-toggle {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  /* Smooth transitions for all interactive elements */
  .folder-toggle,
  .folder-chevron,
  .folder-content,
  .folder-inner {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>