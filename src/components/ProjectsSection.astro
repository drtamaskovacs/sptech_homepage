---
// ProjectsSection.astro

import { getCollection } from 'astro:content';
import { formatDate } from '@lib/utils';

// Update interface to match your actual content schema
interface ProjectData {
  title: string;
  summary: string;
  date: Date | string;
  tags: string[];
  draft?: boolean;
  demoUrl?: string;
  repoUrl?: string;
  duration?: string;
  image?: string;
}

interface CollectionEntry {
  id: string;
  slug: string;
  body: string;
  collection: string;
  data: ProjectData;
}

// Fetch projects from content collection
const allProjects = await getCollection('projects');
const featuredProjects = allProjects
  .filter(project => !project.data.draft)
  .sort((a, b) => {
    const dateA = new Date(a.data.date).getTime();
    const dateB = new Date(b.data.date).getTime();
    return dateB - dateA;
  })
  .slice(0, 3); // Get the 3 most recent projects

interface Props {
  title?: string;
  subtitle?: string;
  projects?: CollectionEntry[];
}

const { 
  title = "Recent Projects", 
  subtitle = "Delivering innovative solutions across industries",
  projects = featuredProjects 
} = Astro.props;
---

<section class="bg-custom-blue-gradient py-32 relative">
  <div class="container mx-auto">
    <h2 class="font-square text-center text-5xl font-bold mb-6 text-blue-400">{title}</h2>
    <p class="text-center text-gray-300 mb-16 max-w-3xl mx-auto">
      {subtitle}
    </p>
    
    <div class="flex flex-col gap-3 max-w-4xl mx-auto">
      {projects.map((project) => (
        <a
          href={`/${project.collection}/${project.slug}`}
          class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out"
        >
          <div class="w-full group-hover:text-black group-hover:dark:text-white blend">
            <div class="flex flex-wrap items-center gap-2">
              <div class="text-sm capitalize px-2 py-0.5 rounded-full border border-black/15 dark:border-white/25">
                project
              </div>
              <div class="text-sm uppercase">{formatDate(project.data.date)}</div>
            </div>
            <div class="font-semibold mt-3 text-black dark:text-white">
              {project.data.title}
            </div>

            <div class="text-sm line-clamp-2">{project.data.summary}</div>
            <ul class="flex flex-wrap mt-2 gap-1">
              {project.data.tags.map((tag) => (
                <li class="text-xs uppercase py-0.5 px-1 rounded bg-black/5 dark:bg-white/20 text-black/75 dark:text-white/75">
                  {tag}
                </li>
              ))}
            </ul>
          </div>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke-width="2.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white"
          >
            <line
              x1="5"
              y1="12"
              x2="19"
              y2="12"
              class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
            />
            <polyline
              points="12 5 19 12 12 19"
              class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
            />
          </svg>
        </a>
      ))}
    </div>
    
    {/* View all projects link */}
    <div class="flex justify-end mt-8 max-w-4xl mx-auto">
      <a href="/projects" class="text-white flex items-center group">
        All Projects 
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
        </svg>
      </a>
    </div>
  </div>
</section>